{"version":3,"sources":["assets/logo.png","assets/background.jpg","components/UI/Button/Button.js","components/Header/Header.js","components/LandingPage/MainContent/MainContent.js","components/UI/SearchBar/SearchBar.js","components/LandingPage/MainContent/RightSide/RightSide.js","components/LandingPage/MainContent/LeftSide/Slide/Slide.js","components/UI/LinkButton/LinkButton.js","components/LandingPage/MainContent/LeftSide/MainInfo/MainInfo.js","components/LandingPage/MainContent/LeftSide/About/About.js","components/Map/Map.js","components/LandingPage/MainContent/LeftSide/Result/Result.js","components/LandingPage/MainContent/LeftSide/LeftSide.js","components/Map/loadScript.js","components/Map/MapFunctions.js","containers/LandingPage/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","props","react_default","a","createElement","className","onClick","click","children","Header","logoWidth","actualSite","logoStyle","width","style","src","Logo","alt","UI_Button_Button","MainContent","backgroundImage","concat","Background","SearchBar","action","method","type","name","placeholder","id","geoClick","title","searchClick","RightSide","UI_SearchBar_SearchBar","href","Slide","LinkButton","span","MainInfo","clas","UI_LinkButton_LinkButton","aboutClick","About","backClick","Map","height","Result","components_Map_Map","LeftSide","resultStyle","left","mainStyle","aboutStyle","LeftSide_Slide_Slide","LeftSide_MainInfo_MainInfo","linkClick","LeftSide_About_About","LeftSide_Result_Result","loadScript","url","index","window","document","getElementsByTagName","script","async","defer","parentNode","insertBefore","createMap","google","maps","getElementById","center","lat","lng","zoom","showAddress","map","input","Promise","resolve","reject","latLng","Geocoder","geocode","address","results","status","geometry","location","setCenter","Marker","position","alert","loadGeoJson","mapLayer","geoJson","data","addGeoJson","setStyle","fillColor","strokeWeight","addListener","event","revertStyle","overrideStyle","feature","findAddress","latitude","longitude","latlng","parseFloat","value","formatted_address","LandingPage","state","componentDidMount","linkClickHandler","page","_this","setState","geocodeClickHandler","navigator","geolocation","getCurrentPosition","coords","console","log","shearchClickHandler","_callee","fraze","regenerator_default","wrap","_context","prev","next","sent","powiaty","addListenerOnce","stop","pizdaHandler","forEach","testPoly","Polygon","paths","getGeometry","getAt","getArray","poly","containsLocation","innerText","getProperty","components_Header_Header","this","LandingPage_MainContent_MainContent","MainContent_LeftSide_LeftSide","MainContent_RightSide_RightSide","Component","App","containers_LandingPage_LandingPage","Boolean","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.449bae9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0e44b478.png\";","module.exports = __webpack_public_path__ + \"static/media/background.c27ae5d5.jpg\";","import React from 'react';\n\nimport './Button.scss';\n\nconst Button = (props) => {\n\nreturn (\n  <button className=\"Button\" onClick={props.click}>\n    {props.children}\n  </button>\n)};\n\nexport default Button;\n","import React from 'react';\nimport Button from '../UI/Button/Button'\n\nimport Logo from '../../assets/logo.png'\n\nimport './Header.scss';\n\nconst Header = (props) => {\n  let logoWidth = \"15%\"\n  if (props.actualSite < 2) {\n    logoWidth = \"7%\"\n  }\n  const logoStyle = {\n    width: logoWidth\n  }\n\n  return (\n    <header className=\"Header\">\n    <nav>\n      <img style={logoStyle} className=\"logo\" src={Logo} alt=\"Logo\" />\n      <div className=\"accessibility-btns\">\n        <Button>A+</Button>\n        <Button>A-</Button>\n        <Button><i className=\"fas fa-adjust\"></i></Button>\n        <Button><i className=\"fas fa-adjust contrast-\"></i></Button>\n      </div>\n      <div className=\"login\"><Button>Zaloguj się</Button></div>\n    </nav>\n    </header>\n\n  )\n};\n\nexport default Header;\n","import React from 'react';\n\nimport Background from '../../../assets/background.jpg'\n\nimport './MainContent.scss';\n\nconst MainContent = (props) => {\n\n  const style = {\n    backgroundImage: `url(${Background})`\n  }\n\n  return (\n    <div style={style} className=\"MainContent\">\n      <div className=\"mask\"></div>\n      <div className=\"wrapper\">\n        {props.children}\n      </div>\n    </div>\n  )\n};\n\nexport default MainContent;\n","import React from 'react';\n\nimport './SearchBar.scss';\n\nconst SearchBar = (props) => {\n\n  return (\n    <div className=\"SearchBar\" action=\"index.html\" method=\"post\">\n      <input type=\"text\" name=\"search\" placeholder=\"Wyszukaj adres\" id=\"search-bar\"/>\n      <button onClick={()=>{props.geoClick()}} className=\"localization\" title=\"Znajdź adres\"><i className=\"far fa-dot-circle\"></i></button>\n      <button onClick={()=>{props.searchClick(1)}} className=\"search-icon\" title=\"Wyszukaj\"><i className=\"fas fa-search\"></i></button>\n    </div>\n  )\n};\n\nexport default SearchBar;\n","import React from 'react';\n\nimport SearchBar from '../../../UI/SearchBar/SearchBar'\n\nimport './RightSide.scss';\n\nconst RightSide = (props) => {\n\n  return (\n    <div className=\"RightSide\">\n      <div className=\"action-btns\">\n        <p className=\"try-it\">Wypróbuj już teraz</p>\n        <SearchBar geoClick={props.geoClick} searchClick={props.searchClick}/>\n        <p>\n          lub skorzystaj z wyszukiwania obszarów jako&nbsp;<a href=\"\">instytucja&nbsp;publiczna</a>\n        </p>\n      </div>\n    </div>\n  )\n};\n\nexport default RightSide;\n","import React from 'react';\n\nimport './Slide.scss';\n\nconst Slide = (props) => {\n\nreturn (\n  <div style={props.style} className=\"Slide\">\n    {props.children}\n  </div>\n)};\n\nexport default Slide;\n","import React from 'react';\n\nimport './LinkButton.scss';\n\nconst LinkButton = (props) => {\n\n  return (\n    <button style={props.span} className=\"LinkButton\" onClick={() => { props.click(props.id) }}>\n      <span>{props.children}</span>\n    </button>\n  )\n};\n\nexport default LinkButton;\n","import React from 'react';\n\nimport LinkButton from '../../../../UI/LinkButton/LinkButton'\n\nimport './MainInfo.scss';\n\nconst MainInfo = (props) => {\n\n  return (\n    <div className=\"MainInfo\">\n      <h1>Inteligentna ocena lokalizacji\n        pod kątem zwrotu inwestycji\n        w&nbsp;odnawialne źródła energii.</h1>\n      <a clas=\"about-link\" href=\"#o-aplikacji\"></a>\n      <LinkButton click={props.aboutClick} id={3}>Dowiedz się więcej</LinkButton>\n    </div>\n  )\n};\n\nexport default MainInfo;\n","import React from 'react';\n\nimport LinkButton from '../../../../UI/LinkButton/LinkButton'\n\nimport './About.scss';\n\nconst About = (props) => {\n\n  return (\n    <div className=\"About\">\n      <h2>O stronie</h2>\n      <p><strong>Green Quick</strong> to jest takie zajebiste. Tutaj trochę bardzo ważnych i mądrych słów o tym jak to działa i dlaczego to działa bardzo dobrze, napisać coś zgrabnie o satelitach i o danych, tak żeby było parę linijek wartościowego tekstu. Lubię placki.</p>\n      <p>Tutaj trochę bardzo ważnych i mądrych słów o tym jak to działa i dlaczego to działa bardzo dobrze, napisać coś zgrabnie o satelitach i o danych, tak żeby było parę linijek wartościowego tekstu. Lubię placki.</p>\n      <LinkButton click={props.backClick} id={2}><i className=\"fas fa-long-arrow-alt-left\"></i> Powrót</LinkButton>\n    </div>\n  )\n};\n\nexport default About;\n","import React from 'react';\n\nimport './Map.scss';\n\nconst Map = (props) => {\n\n  const mapStyle = {\n    width: \"70%\",\n    height: \"240px\"\n  }\n\n  return (\n    <div id=\"map\" className=\"Map\" style={mapStyle}></div>\n  )\n};\n\nexport default Map;\n","import React from 'react';\n\nimport LinkButton from '../../../../UI/LinkButton/LinkButton'\nimport Map from '../../../../Map/Map'\n\n\nimport './Result.scss';\n\nconst Result = (props) => {\n  return (\n    <div className=\"Result\">\n      <h2>Wynik</h2>\n      <h3 id=\"powiat\">Powiat ...</h3>\n      <Map />\n      <LinkButton click={props.backClick} id={2}><i className=\"fas fa-long-arrow-alt-left\"></i> Powrót</LinkButton>\n    </div>\n  )\n};\n\nexport default Result;\n\n","import React from 'react';\n\nimport Slide from './Slide/Slide'\nimport MainInfo from './MainInfo/MainInfo'\nimport About from './About/About'\nimport Result from './Result/Result'\n\nimport './LeftSide.scss';\n\nconst LeftSide = (props) => {\n\n  let resultStyle = {\n    left: `${100-props.actualSite*100}%`\n  }\n  let mainStyle = {\n    left: `${200-props.actualSite*100}%`\n  }\n  let aboutStyle = {\n    left: `${300-props.actualSite*100}%`\n  }\n\n  return (\n    <div className=\"LeftSide\">\n      <Slide style={mainStyle}>\n        <MainInfo aboutClick={props.linkClick}/>\n      </Slide>\n      <Slide style={aboutStyle}>\n        <About backClick={props.linkClick}/>\n      </Slide>\n      <Slide style={resultStyle}>\n        <Result backClick={props.linkClick}/>\n      </Slide>\n    </div>\n  )\n};\n\nexport default LeftSide;\n","const loadScript = (url) => {\r\n    var index  = window.document.getElementsByTagName(\"script\")[0]\r\n    var script = window.document.createElement(\"script\")\r\n    script.src = url\r\n    script.async = true\r\n    script.defer = true\r\n    index.parentNode.insertBefore(script, index)\r\n}\r\n\r\nexport default loadScript;","import { async } from \"q\";\r\n\r\nexport const createMap = () => {\r\n  const google = window.google;\r\n\r\n  const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n    center: { lat: -34.397, lng: 150.644 },\r\n    zoom: 10,\r\n  });\r\n\r\n  return map\r\n}\r\n\r\nexport const showAddress = (map, input) => {\r\n  return new Promise((resolve, reject) => {\r\n    const google = window.google;\r\n    const geocoder = new google.maps.Geocoder();\r\n    let latLng;\r\n    geocoder.geocode({ 'address': input }, function (results, status) {\r\n      if (status === 'OK') {\r\n        latLng = results[0].geometry.location;\r\n        map.setCenter(latLng);\r\n        var marker = new google.maps.Marker({\r\n          map: map,\r\n          position: latLng\r\n        });\r\n        resolve(latLng);\r\n      } else {\r\n        alert('Geocode was not successful for the following reason: ' + status);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport const loadGeoJson = (map, mapLayer) => {\r\n  // const google = window.google;\r\n  return new Promise((resolve, reject) => {\r\n    const geoJson = map.data.addGeoJson(mapLayer);\r\n    map.data.setStyle({\r\n      // icon: '//example.com/path/to/image.png',\r\n      fillColor: 'rgba(239, 237, 177)',\r\n      strokeWeight: 2,\r\n    });\r\n\r\n    map.data.addListener('mouseover', function (event) {\r\n      map.data.revertStyle();\r\n      map.data.overrideStyle(event.feature, { strokeWeight: 8 });\r\n      // console.log(event.feature.getProperty('jpt_nazwa_'));\r\n      // console.log(event);\r\n    });\r\n\r\n    map.data.addListener('mouseout', function (event) {\r\n      map.data.revertStyle();\r\n    });\r\n    resolve(geoJson);\r\n  });\r\n}\r\n\r\nexport const findAddress = (latitude, longitude) => {\r\n  // const google = window.google;\r\n  const latlng = { lat: parseFloat(latitude), lng: parseFloat(longitude) };\r\n\r\n  const google = window.google;\r\n  if (latitude && longitude) {\r\n    var geocoder = new google.maps.Geocoder;\r\n\r\n    geocoder.geocode({ 'location': latlng }, function (results, status) {\r\n      if (status === 'OK') {\r\n        if (results[0]) {\r\n\r\n          // console.log(results[0].formatted_address);\r\n          document.getElementById(\"search-bar\").value = results[0].formatted_address;\r\n\r\n        } else {\r\n          window.alert('No results found');\r\n        }\r\n      } else {\r\n        window.alert('Geocoder failed due to: ' + status);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header'\r\nimport MainContent from '../../components/LandingPage/MainContent/MainContent'\r\nimport RightSide from '../../components/LandingPage/MainContent/RightSide/RightSide'\r\nimport LeftSide from '../../components/LandingPage/MainContent/LeftSide/LeftSide'\r\nimport loadScript from '../../components/Map/loadScript'\r\nimport {createMap, showAddress, loadGeoJson, findAddress} from '../../components/Map/MapFunctions'\r\n\r\nimport powiaty from \"../../assets/powiaty.json\";\r\n// import googleLogo from \"../../assets/google.json\";\r\nimport './LandingPage.scss';\r\n\r\nclass LandingPage extends Component {\r\n    state = {\r\n        actualSite: 2,\r\n        location: {\r\n            lat: null,\r\n            lng: null\r\n        }\r\n    }\r\n\r\n    map = null;\r\n    latLng = null;\r\n\r\n    componentDidMount = () => {\r\n        // showLocal();\r\n        loadScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCyfGjRlQjt9v6WHdQDNh7vgS7l5pntwb8&libraries=places\")\r\n    }\r\n\r\n    linkClickHandler = (page) => {\r\n        this.setState({\r\n            actualSite: page,\r\n        })\r\n    }\r\n\r\n    geocodeClickHandler = () => {\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => { findAddress(position.coords.latitude, position.coords.longitude) });\r\n        } else {\r\n            console.log(\"Geolocation is not supported by this browser.\");\r\n        }\r\n    }\r\n\r\n    shearchClickHandler = async (page) => {\r\n        const fraze = document.getElementById(\"search-bar\").value;\r\n        console.log(fraze);\r\n        // const map = showLocal(fraze);\r\n        const map = createMap();\r\n        const latLng = await showAddress(map, fraze);\r\n        console.log(latLng)\r\n        this.map = map;\r\n        this.latLng = latLng;\r\n        // console.log(powiaty)\r\n        this.linkClickHandler(page);\r\n        const geoJson = await loadGeoJson(map, powiaty);\r\n        console.log(geoJson)\r\n        window.google.maps.event.addListenerOnce(map, 'idle', ()=>{\r\n            // this.pizdaHandler();\r\n            console.log(\"loaded\")\r\n        });\r\n    }\r\n\r\n    pizdaHandler = () => {\r\n        const google = window.google;\r\n        console.log(this.latLng)\r\n        this.map.data.forEach((feature)=>{\r\n            const testPoly = new google.maps.Polygon( { paths:feature.getGeometry().getAt(0).getAt(0).getArray() } );\r\n            if ( google.maps.geometry.poly.containsLocation(this.latLng, testPoly) ) {\r\n                // console.log(feature.getProperty('jpt_nazwa_'));\r\n                // alert('powiat '+feature.getProperty('jpt_nazwa_'));\r\n                document.getElementById(\"powiat\").innerText = 'Powiat '+feature.getProperty('jpt_nazwa_');\r\n            // This works now, still have to loop through the arrays for the multipolygons\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"LandingPage\">\r\n                <Header actualSite={this.state.actualSite}/>\r\n                <MainContent>\r\n                    <LeftSide actualSite={this.state.actualSite} linkClick={this.linkClickHandler} />\r\n                    <RightSide geoClick={this.geocodeClickHandler} searchClick={this.shearchClickHandler} />\r\n                </MainContent>\r\n                <button onClick={this.pizdaHandler}>Powiat</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default LandingPage;","import React, {Component} from 'react';\n\nimport LandingPage from './containers/LandingPage/LandingPage'\n\nimport './App.css';\n\nclass App extends Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <LandingPage />\n        <div id=\"map\"></div>\n      </div>\n    );  \n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}